
name: Example Workflow

on:
  pull_request:
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    if: |
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main'
     
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Read variables
        run: |
          stableVersion=$(grep "stableVersion:" .github/variables.yml | awk -F ": " '{print $2}')
          echo "stableVersion=$stableVersion" >> $GITHUB_ENV
          
      - name: Get Tags
        id: get_tags
        run: |
          tags=$(git ls-remote --tags origin | awk '{print $2}' | awk -F/ '{print $NF}')
          echo "::set-output name=tags::$tags"

      - name: Compare Tags
        run: |
          tags=${{ steps.get_tags.outputs.tags }}
          existing_tag= ${{ env.stableVersion }}  # Replace with your existing tag
          if [[ $tags =~ (^|[[:space:]])$existing_tag($|[[:space:]]) ]]; then
            echo "Tag $existing_tag exists!"
          else
            echo "Tag $existing_tag does not exist!"
          fi
          
      - name: Run build
        run: |
          echo "Running build task..."
         
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.stableVersion }}
          release_name: Release ${{ env.stableVersion }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
            - Third Change
          draft: false
          prerelease: false
